"use strict";(self.webpackChunkhandsonreact=self.webpackChunkhandsonreact||[]).push([[8164],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(a),d=r,k=m["".concat(p,".").concat(d)]||m[d]||u[d]||l;return a?n.createElement(k,o(o({ref:t},c),{},{components:a})):n.createElement(k,o({ref:t},c))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2518:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const l={title:"JSX",sidebar_label:"JSX",slug:"/jsx"},o=void 0,i={unversionedId:"JSX",id:"JSX",title:"JSX",description:"JSX just provides syntactic sugar for the function:",source:"@site/docs/03-JSX.md",sourceDirName:".",slug:"/jsx",permalink:"/docs/jsx",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-JSX.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"JSX",sidebar_label:"JSX",slug:"/jsx"},sidebar:"someSidebar",previous:{title:"Elements",permalink:"/docs/elements"},next:{title:"Virtual DOM",permalink:"/docs/virtual-dom"}},p={},s=[{value:"Part 1 - Replacing createElement with JSX",id:"part-1---replacing-createelement-with-jsx",level:2},{value:"Part 2 - Embedding Expressions in JSX",id:"part-2---embedding-expressions-in-jsx",level:2},{value:"Part 3 - Specifying Attributes with JSX",id:"part-3---specifying-attributes-with-jsx",level:2},{value:"Part 4 - Children",id:"part-4---children",level:2},{value:"Reference",id:"reference",level:2}],c={toc:s};function m(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"JSX just provides syntactic sugar for the function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"React.createElement(component, props, ...children);\n")),(0,r.kt)("h2",{id:"part-1---replacing-createelement-with-jsx"},"Part 1 - Replacing createElement with JSX"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Comment out the ",(0,r.kt)("inlineCode",{parentName:"p"},"React.createElement")," call and replace it with the JavaScript XML (JSX) as shown below. When compiled the JSX will generate the commented code below it."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"//    const element = React.createElement(\n//      'div',\n//      {\n//        className: 'container'\n//      },\n//      'Hello World'\n//    );\n\nconst element = <div className=\"container\">Hello World</div>;\nReactDOM.createRoot(rootElement).render(element);\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"But since a JSX compiler has not been configured if you try to run this code by opening or refreshing the index page in the your browser you will get the following error:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"Uncaught SyntaxError: Unexpected token <\n")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Because the bracket syntax (JSX) has not been compiled to JavaScript."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To install the JSX compiler (Babel)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm install --save-dev @babel/standalone\n")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Compiling in the browser with @babel/standalone has a fairly limited use case, so if you are working on a production site you should be precompiling your scripts server-side."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To configure the JSX compiler (Babel). Make the following changes:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'...\n  <script src="/node_modules/react-dom/umd/react-dom.development.js"><\/script>\n+ <script src="/node_modules/@babel/standalone/babel.min.js"><\/script>\n- <script type="text/javascript" src="/main.js">\n+ <script type="text/babel" src="/main.js">\n...\n<\/script>\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You should now again see the following output to the page"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Hello World\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the previous chapter, we wrote out React.createElement calls but now the Babel compiler generates them."),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"If you want to test out how some specific JSX is converted into JavaScript, you try out ",(0,r.kt)("a",{parentName:"p",href:"https://babeljs.io/repl"},"the online Babel compiler"))),(0,r.kt)("p",{parentName:"li"},"Here are some other examples:"),(0,r.kt)("p",{parentName:"li"},"List:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<ul>\n  <li>Home</li>\n  <li>About</li>\n  <li>Contact</li>\n</ul>\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"React.createElement(\n  'ul',\n  null,\n  React.createElement('li', null, 'Home'),\n  React.createElement('li', null, 'About'),\n  React.createElement('li', null, 'Contact')\n);\n")),(0,r.kt)("p",{parentName:"li"},"Paste ",(0,r.kt)("a",{target:"_blank",href:a(5851).Z},"this Sign-In form")," into the ",(0,r.kt)("a",{parentName:"p",href:"https://babeljs.io/repl"},"the online Babel compiler")," to understand why you will want to use ",(0,r.kt)("inlineCode",{parentName:"p"},"JSX")," as your HTML grows."))),(0,r.kt)("h2",{id:"part-2---embedding-expressions-in-jsx"},"Part 2 - Embedding Expressions in JSX"),(0,r.kt)("p",null,"An expression can be created in JSX with curly braces. When you create an expression using curly braces you are saying you want to write some JavaScript."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a variable and assign a ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," to it then use that variable inside your ",(0,r.kt)("inlineCode",{parentName:"p"},"JSX")," in an ",(0,r.kt)("inlineCode",{parentName:"p"},"expression"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"<script type=\"text/babel\">\n  const rootElement = document.getElementById('root');\n+  const first = 'Joe';\n+  const element = <div className=\"container\">Hello {first}</div>;\n ReactDOM.createRoot(rootElement).render(element);\n<\/script>\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"Hello Joe\n")),(0,r.kt)("p",{parentName:"li"},"You can use complex objects as well:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-diff"}," const rootElement = document.getElementById('root');\n+  const person = { first: 'Joe', last: 'Doe' };\n  const element = (\n    <div className=\"container\">\n+      Hello {person.first} {person.last}\n    </div>\n  );\n ReactDOM.createRoot(rootElement).render(element);\n")))),(0,r.kt)("h2",{id:"part-3---specifying-attributes-with-jsx"},"Part 3 - Specifying Attributes with JSX"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download the React logo from ",(0,r.kt)("a",{parentName:"p",href:"https://brandslogos.com/r/react-logo-1/"},"this site")," into the root of your project ",(0,r.kt)("inlineCode",{parentName:"p"},"demos")," as ",(0,r.kt)("inlineCode",{parentName:"p"},"react-logo.png"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update the element to be an image tag pointing to the logo."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const element = <img src="./react-logo.png" />;\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Refresh the page and the React logo should appear on the page.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a logo object with path, name, and title properties and set attributes in JSX to each of those values as shown below.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const logo = {\n  name: 'React Logo',\n  title: 'React Logo',\n  path: './react-logo.png',\n};\n\nconst element = <img src={logo.path} alt={logo.name} title={logo.title} />;\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Refresh the page and the React logo should still appear on the page. Hover over the logo with your mouse and the title should appear."),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Note that when the value is a ",(0,r.kt)("inlineCode",{parentName:"p"},"string literal")," you can simply set the attribute to it, but when the value refers to a variable or a property on an object you need to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"expression")," syntax and be sure to leave off the quotes ",(0,r.kt)("inlineCode",{parentName:"p"},"''"),"."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In general, you can use any DOM properties and attributes in JSX but there are a few things to be aware of:"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"In React, all DOM properties and attributes (including event handlers) should be camelCased. For example, the HTML attribute ",(0,r.kt)("inlineCode",{parentName:"p"},"tabindex")," corresponds to the attribute tabIndex in React. The exception is aria-",(0,r.kt)("em",{parentName:"p"}," and data-")," attributes, which should be lowercased. For example, you can keep aria-label as aria-label.")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"There are a number of attributes that work differently between React and HTML. ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/dom-elements.html#differences-in-attributes"},"You can read about them here"),".")))),(0,r.kt)("p",null,"The most common differences are shown below."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"class")," use ",(0,r.kt)("inlineCode",{parentName:"p"},"className")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<div className="alert alert-danger">error message</div>\n')),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Change the element variable to the ",(0,r.kt)("inlineCode",{parentName:"li"},"div")," shown above with an error message"),(0,r.kt)("li",{parentName:"ol"},"Refresh the page in your browser and inspect the div to see that ",(0,r.kt)("inlineCode",{parentName:"li"},"className")," was changed to ",(0,r.kt)("inlineCode",{parentName:"li"},"class")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"for")," use ",(0,r.kt)("inlineCode",{parentName:"p"},"htmlFor")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<form>\n  <label htmlFor="name">Name</label>\n  <input id="name" />\n</form>\n')))),(0,r.kt)("h2",{id:"part-4---children"},"Part 4 - Children"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You can nest multiple child elements."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const element = (\n  <ul>\n    <li>\n      <a href="">a</a>\n    </li>\n    <li>\n      <a href="">b</a>\n    </li>\n    <li>\n      <a href="">c</a>\n    </li>\n  </ul>\n);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If you want your code formatting and indentation to line up you will want your opening tag on the next line after the variable declaration. Because JavaScript has automatic semi-colon insertion your code can break as shown below."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const element = ;\n <ul>\n ...\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To prevent automatic semi-colon insertion issues and still be able to use proper indentation, simply wrap your JSX in parenthesis () as is shown above.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Although you can nest any number of elements inside the root parent element you can only have one parent element. The code below is invalid."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const element = (\n    <p>123</p>\n    <ul>\n    . ..\n    </ul>\n);\n")),(0,r.kt)("p",{parentName:"li"},"You will receive the following error:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Uncaught SyntaxError: /Inline Babel script: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\n")),(0,r.kt)("p",{parentName:"li"},"To fix this you can either:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"wrap your code in a container element like a div")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"const element = (\n+     <div> //extraneous element\n      <p>123</p>\n      <ul>\n      . ..\n      </ul>\n+    </div>\n  );\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"wrap your code in a ",(0,r.kt)("inlineCode",{parentName:"li"},"React.Fragment")," element")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"const element = (\n+     <React.Fragment>\n      <p>123</p>\n      <ul>\n      . ..\n      </ul>\n+    </React.Fragment>\n  );\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"use short-hand syntax")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Support for fragment syntax in JSX will vary depending on the tools you use to build your app.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"const element = (\n+     <>\n      <p>123</p>\n      <ul>\n      . ..\n      </ul>\n+     </>\n  );\n")))),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/eggheadio/illustrated-dev/blob/master/content/explainers/jsx/index.mdx"},"JSX Illustration")))}m.isMDXComponent=!0},5851:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/bootstrap-form-c9e89573ba308c36eec56c7c2197bf61.jsx"}}]);