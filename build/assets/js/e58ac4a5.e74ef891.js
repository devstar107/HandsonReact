"use strict";(self.webpackChunkhandsonreact=self.webpackChunkhandsonreact||[]).push([[5039],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>j});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,j=u["".concat(i,".").concat(m)]||u[m]||d[m]||s;return r?n.createElement(j,o(o({ref:t},l),{},{components:r})):n.createElement(j,o({ref:t},l))}));function j(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:a,o[1]=c;for(var p=2;p<s;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4171:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const s={title:"Testing Lab 8: Reducer Tests"},o=void 0,c={unversionedId:"labs/js/T8-ReducerTests",id:"labs/js/T8-ReducerTests",title:"Testing Lab 8: Reducer Tests",description:"Objectives",source:"@site/docs/labs/js/T8-ReducerTests.md",sourceDirName:"labs/js",slug:"/labs/js/T8-ReducerTests",permalink:"/docs/labs/js/T8-ReducerTests",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/labs/js/T8-ReducerTests.md",tags:[],version:"current",frontMatter:{title:"Testing Lab 8: Reducer Tests"},sidebar:"someSidebar",previous:{title:"Testing Lab 7: Action Tests",permalink:"/docs/labs/js/T7-ActionTests"},next:{title:"Testing Lab 9: API Tests",permalink:"/docs/labs/js/T9-APITests"}},i={},p=[{value:"Objectives",id:"objectives",level:2},{value:"Steps",id:"steps",level:2},{value:"Test a Reducer",id:"test-a-reducer",level:3},{value:"\u2714 You have completed Lab 8",id:"-you-have-completed-lab-8",level:3}],l={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"objectives"},"Objectives"),(0,a.kt)("ul",{className:"contains-task-list"},(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Test a Reducer")),(0,a.kt)("h2",{id:"steps"},"Steps"),(0,a.kt)("h3",{id:"test-a-reducer"},"Test a Reducer"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create the file ",(0,a.kt)("inlineCode",{parentName:"p"},"src\\projects\\state\\__tests__\\projectReducer-test.js"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Add the following code to test the updating of a project."),(0,a.kt)("h4",{parentName:"li",id:"srcprojectsstate__tests__projectreducer-testjs"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\state\\__tests__\\projectReducer-test.js")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { projectReducer, initialProjectState } from "../projectReducer";\nimport { SAVE_PROJECT_SUCCESS } from "../projectTypes";\nimport { Project } from "../../Project";\nimport { MOCK_PROJECTS } from "../../MockProjects";\ndescribe("project reducer", () => {\n  test("should update an existing project", () => {\n    const project = MOCK_PROJECTS[0];\n    const updatedProject = Object.assign(new Project(), project, {\n      name: project.name + " updated",\n    });\n    const currentState = { ...initialProjectState, projects: [project] };\n    const updatedState = {\n      ...initialProjectState,\n      projects: [updatedProject],\n    };\n    expect(\n      projectReducer(currentState, {\n        type: SAVE_PROJECT_SUCCESS,\n        payload: updatedProject,\n      })\n    ).toEqual(updatedState);\n  });\n});\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Verify the test passes."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"PASS  src/projects/state/__tests__/projectReducer-test.js\n")))),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"-you-have-completed-lab-8"},"\u2714"," You have completed Lab 8"))}u.isMDXComponent=!0}}]);